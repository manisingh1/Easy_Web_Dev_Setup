# # syntax=docker/dockerfile:1
# FROM python:3.9-alpine as base
# WORKDIR /usr/src/app
# ENV FLASK_APP=app.py
# ENV FLASK_RUN_HOST=0.0.0.0
# RUN apk add --no-cache gcc musl-dev linux-headers
# COPY requirements.txt requirements.txt
# RUN pip install -r requirements.txt
# RUN pip install debugpy
# EXPOSE 5000
# COPY . .
# CMD ["flask", "run"]
# CMD ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "app.py"]

FROM python:3.9-alpine as base

RUN mkdir /usr/src/app
WORKDIR /usr/src/app

COPY ./requirements.txt /usr/src/app/requirements.txt
RUN pip install -r requirements.txt

COPY ./ /app/

########### START NEW IMAGE : DEBUG ###################
FROM base as debug
RUN pip install debugpy

CMD python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m flask run -h 0.0.0.0 -p 8001

########### START NEW IMAGE: PRODUCTION ###################
FROM base as prod

# CMD flask run -h 0.0.0.0 -p 5000
RUN pip install gunicorn
CMD ["gunicorn", "-w", "3", "--timeout", "5", "--bind", "0.0.0.0:8001", "app:app"]

########### START NEW IMAGE: TESTING
FROM base as testing
RUN pip install debugpy

CMD python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m pytest

